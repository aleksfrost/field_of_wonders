querry = """

BEGIN;


ALTER TABLE IF EXISTS public.auth_group_permissions DROP CONSTRAINT IF EXISTS auth_group_permissio_permission_id_84c5c92e_fk_auth_perm;

ALTER TABLE IF EXISTS public.auth_group_permissions DROP CONSTRAINT IF EXISTS auth_group_permissions_group_id_b120cbf9_fk_auth_group_id;

ALTER TABLE IF EXISTS public.auth_permission DROP CONSTRAINT IF EXISTS auth_permission_content_type_id_2f476e4b_fk_django_co;

ALTER TABLE IF EXISTS public.auth_user_groups DROP CONSTRAINT IF EXISTS auth_user_groups_group_id_97559544_fk_auth_group_id;

ALTER TABLE IF EXISTS public.auth_user_groups DROP CONSTRAINT IF EXISTS auth_user_groups_user_id_6a12ed8b_fk_auth_user_id;

ALTER TABLE IF EXISTS public.auth_user_user_permissions DROP CONSTRAINT IF EXISTS auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm;

ALTER TABLE IF EXISTS public.auth_user_user_permissions DROP CONSTRAINT IF EXISTS auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id;

ALTER TABLE IF EXISTS public.cart_cartitem DROP CONSTRAINT IF EXISTS cart_cartitem_prise_id_0dd6cbd5_fk_prises_prise_id;

ALTER TABLE IF EXISTS public.cart_cartitem DROP CONSTRAINT IF EXISTS cart_cartitem_user_id_292943b8_fk_users_user_id;

ALTER TABLE IF EXISTS public.django_admin_log DROP CONSTRAINT IF EXISTS django_admin_log_content_type_id_c4bce8eb_fk_django_co;

ALTER TABLE IF EXISTS public.django_admin_log DROP CONSTRAINT IF EXISTS django_admin_log_user_id_c564eba6_fk_auth_user_id;

ALTER TABLE IF EXISTS public.game_rounds DROP CONSTRAINT IF EXISTS game_rounds_game_id_fkey;

ALTER TABLE IF EXISTS public.game_rounds DROP CONSTRAINT IF EXISTS game_rounds_round_id_fkey;

ALTER TABLE IF EXISTS public.games DROP CONSTRAINT IF EXISTS games_user_id_fkey;

ALTER TABLE IF EXISTS public.games DROP CONSTRAINT IF EXISTS games_word_id_fkey;

ALTER TABLE IF EXISTS public.prises DROP CONSTRAINT IF EXISTS prises_categorie_id_fkey;

ALTER TABLE IF EXISTS public.users_prises DROP CONSTRAINT IF EXISTS users_prises_prise_id_fkey;

ALTER TABLE IF EXISTS public.users_prises DROP CONSTRAINT IF EXISTS users_prises_user_id_fkey;



DROP TABLE IF EXISTS public.auth_group;

CREATE TABLE IF NOT EXISTS public.auth_group
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auth_group_pkey PRIMARY KEY (id),
    CONSTRAINT auth_group_name_key UNIQUE (name)
);

DROP TABLE IF EXISTS public.auth_group_permissions;

CREATE TABLE IF NOT EXISTS public.auth_group_permissions
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    group_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id),
    CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id)
);

DROP TABLE IF EXISTS public.auth_permission;

CREATE TABLE IF NOT EXISTS public.auth_permission
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auth_permission_pkey PRIMARY KEY (id),
    CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename)
);

DROP TABLE IF EXISTS public.auth_user;

CREATE TABLE IF NOT EXISTS public.auth_user
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    password character varying(128) COLLATE pg_catalog."default" NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    email character varying(254) COLLATE pg_catalog."default" NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    CONSTRAINT auth_user_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_username_key UNIQUE (username)
);

DROP TABLE IF EXISTS public.auth_user_groups;

CREATE TABLE IF NOT EXISTS public.auth_user_groups
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id integer NOT NULL,
    group_id integer NOT NULL,
    CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id)
);

DROP TABLE IF EXISTS public.auth_user_user_permissions;

CREATE TABLE IF NOT EXISTS public.auth_user_user_permissions
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id)
);

DROP TABLE IF EXISTS public.cards;

CREATE TABLE IF NOT EXISTS public.cards
(
    card_id integer NOT NULL,
    user_id bigint,
    CONSTRAINT cards_pkey PRIMARY KEY (card_id)
);

DROP TABLE IF EXISTS public.cart_cartitem;

CREATE TABLE IF NOT EXISTS public.cart_cartitem
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    quantity integer NOT NULL,
    date_added timestamp with time zone NOT NULL,
    prise_id integer NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT cart_cartitem_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.categories;

CREATE TABLE IF NOT EXISTS public.categories
(
    categorie_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    categorie_name character varying COLLATE pg_catalog."default",
    categorie_img character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT categorie_pkey PRIMARY KEY (categorie_id)
);

DROP TABLE IF EXISTS public.django_admin_log;

CREATE TABLE IF NOT EXISTS public.django_admin_log
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    action_time timestamp with time zone NOT NULL,
    object_id text COLLATE pg_catalog."default",
    object_repr character varying(200) COLLATE pg_catalog."default" NOT NULL,
    action_flag smallint NOT NULL,
    change_message text COLLATE pg_catalog."default" NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.django_content_type;

CREATE TABLE IF NOT EXISTS public.django_content_type
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    app_label character varying(100) COLLATE pg_catalog."default" NOT NULL,
    model character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT django_content_type_pkey PRIMARY KEY (id),
    CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model)
);

DROP TABLE IF EXISTS public.django_migrations;

CREATE TABLE IF NOT EXISTS public.django_migrations
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    app character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    applied timestamp with time zone NOT NULL,
    CONSTRAINT django_migrations_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.django_session;

CREATE TABLE IF NOT EXISTS public.django_session
(
    session_key character varying(40) COLLATE pg_catalog."default" NOT NULL,
    session_data text COLLATE pg_catalog."default" NOT NULL,
    expire_date timestamp with time zone NOT NULL,
    CONSTRAINT django_session_pkey PRIMARY KEY (session_key)
);

DROP TABLE IF EXISTS public.game_rounds;

CREATE TABLE IF NOT EXISTS public.game_rounds
(
    gr_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    game_id integer,
    round_id integer,
    CONSTRAINT game_rounds_pkey PRIMARY KEY (gr_id)
);

DROP TABLE IF EXISTS public.games;

CREATE TABLE IF NOT EXISTS public.games
(
    game_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    word_id integer,
    user_id integer,
    letters character varying COLLATE pg_catalog."default",
    CONSTRAINT games_pkey PRIMARY KEY (game_id)
);

DROP TABLE IF EXISTS public.prises;

CREATE TABLE IF NOT EXISTS public.prises
(
    prise_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    prise_description character varying COLLATE pg_catalog."default",
    discount_value integer,
    price_in_scores integer,
    categorie_id integer,
    to_show boolean DEFAULT true,
    CONSTRAINT prises_pkey PRIMARY KEY (prise_id)
);

DROP TABLE IF EXISTS public.rounds;

CREATE TABLE IF NOT EXISTS public.rounds
(
    round_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    round_scores integer,
    is_word_guessed boolean NOT NULL DEFAULT false,
    CONSTRAINT rounds_pkey PRIMARY KEY (round_id)
);

DROP TABLE IF EXISTS public.scores;

CREATE TABLE IF NOT EXISTS public.scores
(
    score_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    score integer NOT NULL,
    CONSTRAINT scores_pkey PRIMARY KEY (score_id)
);

DROP TABLE IF EXISTS public.users;

CREATE TABLE IF NOT EXISTS public.users
(
    user_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    user_name character varying COLLATE pg_catalog."default",
    password character varying COLLATE pg_catalog."default",
    is_admin boolean NOT NULL DEFAULT false,
    scores bigint NOT NULL DEFAULT 0,
    CONSTRAINT users_pkey PRIMARY KEY (user_id),
    CONSTRAINT users_user_name_key UNIQUE (user_name)
);

DROP TABLE IF EXISTS public.users_prises;

CREATE TABLE IF NOT EXISTS public.users_prises
(
    user_id bigint NOT NULL,
    prise_id bigint NOT NULL,
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    CONSTRAINT users_prises_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.words;

CREATE TABLE IF NOT EXISTS public.words
(
    word_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    word character varying COLLATE pg_catalog."default" NOT NULL,
    description character varying COLLATE pg_catalog."default" NOT NULL,
    difficulty integer NOT NULL DEFAULT 100,
    CONSTRAINT words_pkey PRIMARY KEY (word_id),
    CONSTRAINT words_word_key UNIQUE (word)
);

ALTER TABLE IF EXISTS public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id)
    REFERENCES public.auth_permission (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_group_permissions_permission_id_84c5c92e
    ON public.auth_group_permissions(permission_id);


ALTER TABLE IF EXISTS public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id)
    REFERENCES public.auth_group (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_group_permissions_group_id_b120cbf9
    ON public.auth_group_permissions(group_id);


ALTER TABLE IF EXISTS public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_permission_content_type_id_2f476e4b
    ON public.auth_permission(content_type_id);


ALTER TABLE IF EXISTS public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id)
    REFERENCES public.auth_group (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_groups_group_id_97559544
    ON public.auth_user_groups(group_id);


ALTER TABLE IF EXISTS public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_groups_user_id_6a12ed8b
    ON public.auth_user_groups(user_id);


ALTER TABLE IF EXISTS public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id)
    REFERENCES public.auth_permission (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_user_permissions_permission_id_1fbb5f2c
    ON public.auth_user_user_permissions(permission_id);


ALTER TABLE IF EXISTS public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_user_permissions_user_id_a95ead1b
    ON public.auth_user_user_permissions(user_id);


ALTER TABLE IF EXISTS public.cart_cartitem
    ADD CONSTRAINT cart_cartitem_prise_id_0dd6cbd5_fk_prises_prise_id FOREIGN KEY (prise_id)
    REFERENCES public.prises (prise_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS cart_cartitem_prise_id_0dd6cbd5
    ON public.cart_cartitem(prise_id);


ALTER TABLE IF EXISTS public.cart_cartitem
    ADD CONSTRAINT cart_cartitem_user_id_292943b8_fk_users_user_id FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS cart_cartitem_user_id_292943b8
    ON public.cart_cartitem(user_id);


ALTER TABLE IF EXISTS public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS django_admin_log_content_type_id_c4bce8eb
    ON public.django_admin_log(content_type_id);


ALTER TABLE IF EXISTS public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS django_admin_log_user_id_c564eba6
    ON public.django_admin_log(user_id);


ALTER TABLE IF EXISTS public.game_rounds
    ADD CONSTRAINT game_rounds_game_id_fkey FOREIGN KEY (game_id)
    REFERENCES public.games (game_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.game_rounds
    ADD CONSTRAINT game_rounds_round_id_fkey FOREIGN KEY (round_id)
    REFERENCES public.rounds (round_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.games
    ADD CONSTRAINT games_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.games
    ADD CONSTRAINT games_word_id_fkey FOREIGN KEY (word_id)
    REFERENCES public.words (word_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.prises
    ADD CONSTRAINT prises_categorie_id_fkey FOREIGN KEY (categorie_id)
    REFERENCES public.categories (categorie_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users_prises
    ADD CONSTRAINT users_prises_prise_id_fkey FOREIGN KEY (prise_id)
    REFERENCES public.prises (prise_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users_prises
    ADD CONSTRAINT users_prises_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


INSERT INTO words(word, description)
    values
	('СОРОКОНОЖКА', 'Насекомое, которое не любит обуваться'),
	('ЛЕЙКА', 'Садовый инвентарь'),
	('ДЖОМОЛУНГМА', 'Самая высокая гора'),
	('СМЕХОПАНОРАМА', 'Веселая передача'),
	('ПАРОХОД', 'Крузенштерн из простоквашино'),
	('СЛЯКОТЬ', 'Неприятная погода на дворе'),
	('БАРСЕЛОНА', 'Город, в котором находится известный долгострой'),
    ('СЕЛЬДЕРЕЙ','Однолетнее зеленое растение, трава, пряность'),
    ('ГРАБЛИ','Садовый инструмент'),
    ('МОКРИЦА','Насекомое с большим количеством ног'),
    ('ДИКОБРАЗ','Ежик-переросток'),
    ('ПОВАРЕЖКА','Столовый прибор');


INSERT INTO scores(score)
	VALUES
    (10),
    (20),
    (30),
    (40),
    (50),
    (60),
    (70),
    (80),
    (90),
    (100);


INSERT INTO cards(card_id)
	VALUES
    (100001),
    (100002),
    (100003),
    (100004),
    (100005),
    (100006),
    (100007),
    (100008),
    (100009),
    (1000010);

INSERT INTO categories(categorie_name)
	VALUES
    ('Посуда'),
    ('Еда'),
    ('Инвентарь'),
    ('Бытовая химия'),
    ('Красота и здоровье'),
    ('Товары для животных');


INSERT INTO prises(prise_description, discount_value, price_in_scores, categorie_id)
	VALUES
    ('Сервиз какой-то матери, набор', 100, 0, 1),
    ('Ковер-самолет, шт', 100, 0, 3),
    ('Миксер, шт', 100, 0, 3),
    ('Крем "Молодильное яблоко", туба', 100, 0, 5),
    ('Колбаса рога-копытская, батон', 50, 45, 2),
    ('Заяц шоколадный, набор', 20, 70, 2),
    ('Супер лопата, шт', 15, 30, 3),
    ('Шлейка со стразами, шт', 80, 100, 6),
    ('Гербалайф, бут', 45, 30, 5),
    ('Универсальный пятновыводитель, бут', 90, 10, 4);


END;
"""