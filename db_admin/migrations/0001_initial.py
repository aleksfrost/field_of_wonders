# Generated by Django 5.2 on 2025-04-20 17:47

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cards',
            fields=[
                ('card_id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('categorie_id', models.AutoField(primary_key=True, serialize=False)),
                ('categorie_name', models.CharField()),
            ],
            options={
                'db_table': 'categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameRounds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'game_rounds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Games',
            fields=[
                ('game_id', models.AutoField(primary_key=True, serialize=False)),
                ('letters', models.CharField(max_length=33)),
            ],
            options={
                'db_table': 'games',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Prises',
            fields=[
                ('prise_id', models.AutoField(primary_key=True, serialize=False)),
                ('prise_description', models.CharField()),
                ('discount_value', models.IntegerField()),
                ('price_in_scores', models.IntegerField()),
                ('to_show', models.BooleanField(blank=True)),
            ],
            options={
                'db_table': 'prises',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rounds',
            fields=[
                ('round_id', models.AutoField(primary_key=True, serialize=False)),
                ('round_scores', models.IntegerField(blank=True, null=True)),
                ('is_word_guessed', models.BooleanField()),
            ],
            options={
                'db_table': 'rounds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scores',
            fields=[
                ('score_id', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.IntegerField()),
            ],
            options={
                'db_table': 'scores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(blank=True, null=True, unique=True)),
                ('password', models.CharField(blank=True, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('scores', models.BigIntegerField(default=0)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsersPrises',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'users_prises',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Words',
            fields=[
                ('word_id', models.AutoField(primary_key=True, serialize=False)),
                ('word', models.CharField(unique=True)),
                ('description', models.CharField()),
                ('difficulty', models.IntegerField()),
            ],
            options={
                'db_table': 'words',
                'managed': False,
            },
        ),
    ]
